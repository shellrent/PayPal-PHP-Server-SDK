<?php

declare(strict_types=1);

/*
 * PaypalServerSdkLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PaypalServerSdkLib\Controllers;

use apimatic\jsonmapper\JsonMapperException;
use Core\ApiCall;
use Core\Client;
use Core\Request\RequestBuilder;
use Core\Response\Context;
use Core\Response\ResponseHandler;
use PaypalServerSdkLib\Exceptions\JsonMapperWithResponseException;

/**
 * Base controller
 */
class BaseController
{
    /**
     * Client instance
     *
     * @var Client
     */
    private $client;

    public function __construct(Client $client)
    {
        $this->client = $client;
    }

    protected function execute(RequestBuilder $requestBuilder, ?ResponseHandler $responseHandler = null)
    {
		if( !$responseHandler ) {
			$responseHandler = $this->responseHandler();
		}
		
	    $request = $requestBuilder->build($this->client);
	    $request->addAcceptHeader($responseHandler->getFormat());
	    $this->client->beforeRequest($request);
	    $response = $this->client->getHttpClient()->execute($request);
	    $context = new Context($request, $response, $this->client);
	    $this->client->afterResponse($context);
		
		try {
		    return $responseHandler->getResult($context);
			
		} catch( JsonMapperException  $exception ) {
			throw JsonMapperWithResponseException::create($exception, $response->getRawBody() );
		}
    }

    protected function requestBuilder(string $requestMethod, string $path): RequestBuilder
    {
        return new RequestBuilder($requestMethod, $path);
    }

    protected function responseHandler(): ResponseHandler
    {
        return $this->client->getGlobalResponseHandler();
    }
}
